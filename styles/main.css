/*
  CSS STYLES RESET
*/

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/*
  GLOBAL CSS STYLES
*/

:root {
  --font-heading: "Audiowide", sans-serif;
  --font-body: "Inter", sans-serif;
  --black: #0a0a0a;
  --white: #e5e5e5;
  --accent: #00ffe0;
}

body {
  font-family: var(--font-body);
  color: var(--white);
  background-color: var(--black);
}

/*
#background {
  position: fixed;
  inset: 0;
  z-index: -1;
  background-image: url("../assets/backgrounds/bg-default.svg");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-color: var(--black);
}
*/

h1,
h2,
h3 {
  font-family: var(--font-heading);
  margin-bottom: 16px;
  line-height: 1.2;
}

h1 {
  font-size: 56px;
}

h2 {
  font-size: 32px;
  color: var(--accent);
  margin-bottom: 24px;
}

p {
  font-size: 16px;
  margin-bottom: 16px;
}

a {
  color: var(--accent);
}

main {
  width: 912px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 32px;
  display: flex;
  flex-direction: column;
  gap: 4rem;
  backdrop-filter: blur(10px);
  padding: 32px;
  /*border: 1px solid var(--white);*/
}

#hero {
  padding-top: 64px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
}

.icons {
  display: flex;
  gap: 8px;
}

.cards {
  display: flex;
  justify-content: center;
  align-items: stretch;
}

.card {
  display: flex;
  flex-direction: column;
  width: 240px;
  margin: 16px;
  padding: 24px;
  cursor: pointer;
  backdrop-filter: blur(10px);
  border: 1px solid var(--white);
  transition: background-color 0.3s ease;
  height: 280px;
}

.card-content {
  flex-grow: 1;
}

.card-content {
  margin-bottom: 16px;
}

.card:last-child {
  align-self: flex-start;
}

.card:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

/*
  BACKGROUND STYLES
*/

html {
  position: fixed;
  height: 100%;
  width: 100%;
  font-family: "Lato", sans-serif;
  color: #fff;
  background: radial-gradient(ellipse at bottom, #0c1116 0%, #090a0f 100%);
}

/* HORIZON */
#horizon {
  position: absolute;
  width: 160%;
  height: 70%;
  border-radius: 100% / 100%;
  background: #038bff;
  filter: blur(30px);
  left: 50%;
  bottom: -45%;
  margin-left: -80%;
}

#horizon::before {
  content: "";
  position: absolute;
  width: 81.25%;
  height: 70%;
  border-radius: 100% / 100%;
  background: #51afff;
  filter: blur(30px);
  opacity: 0.6;
  margin-left: 9.375%;
}

#horizon::after {
  content: "";
  position: absolute;
  width: 32%;
  height: 20%;
  border-radius: 650px / 350px;
  background: #b0daff;
  filter: blur(30px);
  opacity: 0.5;
  margin-left: 34%;
}

.glow {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 100% / 100%;
  background: #215496;
  filter: blur(200px);
  opacity: 0.7;
  top: -10%;
}

/* EARTH */
#earth {
  position: absolute;
  width: 200%;
  height: 100%;
  background: black;
  border-radius: 100% / 100%;
  left: 50%;
  bottom: -75%;
  margin-left: -100%;
}

#earth::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 100% / 100%;
  box-shadow: inset 0px 0px 62px 20px rgba(60, 105, 138, 0.85);
}

#earth::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 100% / 100%;
  background: linear-gradient(
    to right,
    rgba(0, 0, 0, 1) 0%,
    rgba(0, 0, 0, 0) 50%,
    rgba(0, 0, 0, 1) 100%
  );
}

/**/

body {
  /*
  height: 100vh;
  overflow: hidden;
  background-color: #000;
  display: flex;
  align-items: center;
  justify-content: center;*/
}

.grid-container {
  --grid: 10rem;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transform-style: preserve-3d;
  perspective: 100rem;
  animation: rotate 100s linear infinite forwards;

  .plane {
    --dir: 1;
    width: 300%;
    height: 150%;
    min-height: 70rem;
    position: absolute;
    bottom: 0;
    transform-style: preserve-3d;
    transform-origin: bottom center;
    transform: translateX(-50%) rotateX(85deg);

    &:last-child {
      --dir: -1;
      top: 0;
      transform-origin: top center;
      transform: translateX(-50%) rotateX(-85deg);

      & > * {
        &::after {
          background-image: linear-gradient(
            to top,
            rgba(0, 0, 0, 255) var(--grid),
            rgba(0, 0, 0, 0)
          );
        }
      }
    }

    & > * {
      transform-style: preserve-3d;
      height: 100%;
      width: 100%;
      position: absolute;

      &::before,
      &::after {
        content: "";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
      }
      &::before {
        background-image: repeating-linear-gradient(
            to left,
            #215496,
            #215496 4px,
            transparent 4px,
            transparent var(--grid)
          ),
          repeating-linear-gradient(
            to bottom,
            #215496,
            #215496 4px,
            transparent 4px,
            transparent var(--grid)
          );
        animation: move 1s linear infinite forwards;
      }
      &::after {
        background-image: linear-gradient(
          to bottom,
          rgba(0, 0, 0, 255) var(--grid),
          rgba(0, 0, 0, 0)
        );
        z-index: 1;
        transform: translateZ(1px);
      }
    }

    .glow {
      filter: blur(1rem);
      z-index: 1;
      mix-blend-mode: plus-lighter;
    }
  }
}

@keyframes move {
  from {
    transform: translateY(0px);
  }

  to {
    transform: translateY(calc(var(--grid) * var(--dir)));
  }
}

@keyframes blink {
  0% {
    visibility: visible;
  }

  50% {
    visibility: visible;
  }

  51% {
    visibility: hidden;
  }

  100% {
    visibility: hidden;
  }
}
